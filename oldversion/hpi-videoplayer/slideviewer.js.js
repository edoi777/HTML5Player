// Generated by CoffeeScript 1.8.0

/*
  This class is responsible for the slide previewing functionality
 */
window.Html5Player || (window.Html5Player = {});

window.Html5Player.SlideViewer = (function() {
  SlideViewer.prototype.slideContainer = null;

  SlideViewer.prototype.slideData = null;

  SlideViewer.prototype.slidePreview = null;

  SlideViewer.prototype.player = null;

  SlideViewer.prototype.controlsContainer = null;

  function SlideViewer(player, $baseElement, thumbnails) {
    this.player = player;
    this.slideContainer = $baseElement.find(".slideContainer");
    this.slideData = this.getSlideData(thumbnails);
    this.slidePreview = $baseElement.find(".slidePreview");
    this.controlsContainer = $baseElement.find(".controlsContainer");
  }

  SlideViewer.prototype.buildSlidePreview = function() {

    /*
      create needed divs for holding the preview images
     */
    var $container, $slideDiv, imageIndex, _i, _ref;
    $container = $("<div>");
    for (imageIndex = _i = 0, _ref = this.slideData.length - 1; 0 <= _ref ? _i <= _ref : _i >= _ref; imageIndex = 0 <= _ref ? ++_i : --_i) {
      $slideDiv = $("<div class=\"slideDiv\" data-slideindex=\"" + imageIndex + "\" data-slideurl=\"" + this.slideData[imageIndex].path + "\">");
      $slideDiv.width(this.calcSlideWidth(imageIndex) + "%");
      this.attachMouseEvents($slideDiv, imageIndex, this.controlsContainer, this.slidePreview);
      $container.append($slideDiv);
    }
    return this.slideContainer.append($container);
  };

  SlideViewer.prototype.calcSlideWidth = function(index) {
    var endValue, lastDiv, slideDuration, slideWidth, startValue, videoDuration;
    videoDuration = this.player.videoA.duration;
    if (index >= this.slideData.length - 1) {
      endValue = videoDuration;
      lastDiv = true;
    } else {
      endValue = this.slideData[index + 1].start;
    }
    if (index === 0) {
      startValue = 0;
    } else {
      startValue = this.slideData[index].start;
    }
    slideDuration = endValue - startValue;
    slideWidth = slideDuration * 100 / videoDuration;
    return slideWidth;
  };

  SlideViewer.prototype.createImageElement = function(index) {

    /*
      create an image element where we will store the preview of the slide
      when we need that preview
     */
    var $image;
    $image = $("<img class=\"previewImg\">");
    $image.attr("src", "" + this.slideData[index].path);
    return $image;
  };

  SlideViewer.prototype.attachMouseEvents = function($element, index, $controlsContainer, $slidePreview) {
    $element.on("click", (function(_this) {
      return function(event) {
        return _this.player.gototime(_this.slideData[index].start);
      };
    })(this));
    return $element.hover((function() {
      var imgHeight, x, y;
      imgHeight = parseInt($slidePreview.css("height"));
      x = $element.offset().left - 20;
      y = $controlsContainer.offset().top - imgHeight - 2;
      $slidePreview.find("img").attr("src", $element.attr("data-slideurl"));
      $slidePreview.css("display", "block");
      return $slidePreview.offset({
        top: y,
        left: x
      });
    }), (function() {
      return $slidePreview.css("display", "none");
    }));
  };

  SlideViewer.prototype.getSlideData = function(thumbnails) {

    /*
      parse the JSON and transform the time values into seconds
     */
    var slides;
    slides = thumbnails.images;
    slides.forEach((function(_this) {
      return function(slide) {
        var timeparts;
        timeparts = slide.start.split(":");
        slide.start = parseInt(timeparts[2]) + 60 * parseInt(timeparts[1]) + 3600 * parseInt(timeparts[0]);
        return slide.path = slide.path;
      };
    })(this));
    return slides;
  };

  return SlideViewer;

})();

//# sourceMappingURL=slideviewer.js.js.map
