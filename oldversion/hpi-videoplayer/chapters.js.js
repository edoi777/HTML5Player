// Generated by CoffeeScript 1.8.0
window.Html5Player || (window.Html5Player = {});

window.Html5Player.Chapter = (function() {
  function Chapter(title, time, thumb) {
    this.title = title;
    this.time = time;
    this.thumb = thumb;
    this.active = false;
  }

  Chapter.prototype.seconds = function() {

    /*
      returns chapter time in seconds-from-start;
      only works if @time format is HH:MM:SS
     */
    var time;
    time = this.time.split(":", 3).map(function(i) {
      return parseInt(i);
    });
    return time[0] * 3600 + time[1] * 60 + time[2];
  };

  return Chapter;

})();

window.Html5Player.Chapters = (function() {
  function Chapters(player, chapterData, container) {
    this.player = player;
    this.container = container;
    this.chapters = [];
    this.parseChapters(chapterData);
    this.lastActiveChapter = null;
    this.$chapterContent = container.find("#chapterContent");
  }

  Chapters.prototype.parseChapters = function(data) {

    /*
      parse chapter information from videodata JSON
     */
    return $.each(data, (function(_this) {
      return function(key, chapter) {
        chapter = new Chapter(chapter['title'], chapter['time'], chapter['imagePath']);
        return _this.chapters.push(chapter);
      };
    })(this));
  };

  Chapters.prototype.setActiveChapter = function(time) {
    var chapter, i, _i, _j, _len, _ref, _ref1;
    _ref = this.chapters;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      chapter = _ref[_i];
      chapter.active = false;
    }
    for (i = _j = _ref1 = this.chapters.length - 1; _j >= 0; i = _j += -1) {
      if (time >= this.chapters[i].seconds()) {
        this.chapters[i].active = true;
        break;
      }
    }
    if (i !== this.lastActiveChapter) {
      this.container.find("li").eq(this.lastActiveChapter).removeClass("active");
      this.container.find("li").eq(i).addClass("active");
      return this.lastActiveChapter = i;
    }
  };

  Chapters.prototype.generateChapterList = function() {
    var chapter, _fn, _i, _len, _ref;
    this.container.empty();
    _ref = this.chapters;
    _fn = (function(_this) {
      return function(chapter) {
        var li;
        li = $("<li> <p>" + chapter.title + "</p> <p>" + chapter.time + "</p> </li>");
        if (chapter.active) {
          li.addClass('active');
        }
        _this.bindClickEvent(li, chapter.seconds());
        return _this.container.append(li);
      };
    })(this);
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      chapter = _ref[_i];
      _fn(chapter);
    }
    return true;
  };

  Chapters.prototype.bindClickEvent = function(element, seconds) {
    return element.on("click", (function(_this) {
      return function(event) {
        _this.player.gototime(seconds);
        if (_this.$chapterContent.hasClass("visible")) {
          return _this.$chapterContent.removeClass("visible");
        }
      };
    })(this));
  };

  Chapters.prototype.jumpToChapter = function(number) {
    return this.player.seek(this.chapters[number - 1].seconds());
  };

  return Chapters;

})();

//# sourceMappingURL=chapters.js.js.map
